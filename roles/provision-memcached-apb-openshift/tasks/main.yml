- name: include plan vars
  include_vars:
    file: "{{ _apb_plan_id }}.yml"
- name: generate b62 hash
  shell: "16to62 {{ params_hash }}"
  register: command_output
- name: set fact
  set_fact:
    stack_suffix: "{{ command_output.stdout }}"
- name: generate cidrs
  block:
  - name: generate cidrs
    shell: "getcidrs {{ CidrSize }} {{ NumberOfAvailabilityZones }} {{ VpcId }} {{ region }}"
    register: command_output
  - name: set fact
    set_fact:
      CidrBlocks: "{{ command_output.stdout }}"
  when: CidrBlocks == "auto"
- name: generate azs
  block:
  - name: generate azs
    shell: "getazs {{ NumberOfAvailabilityZones }} {{ region }}"
    register: command_output
  - name: set fact
    set_fact:
      AvailabilityZones: "{{ command_output.stdout }}"
  when: AvailabilityZones == "auto"
- name: Launch ElastiCache Memcached cluster
  cloudformation:
   stack_name: "apb-memcached-{{ stack_suffix }}"
   state: "present"
   region: "{{ region }}"
   disable_rollback: false
   template: "{{ role_path }}/files/MemCachedCluster.yml"
   role_arn: "{{ aws_cloudformation_role_arn }}"
   template_parameters:
     ApplicationName: "{{ application_name }}"
     VpcId: "{{ VpcId }}"
     NumberOfAvailabilityZones: "{{ NumberOfAvailabilityZones | string }}"
     PreferredMaintenanceWindowDay: "{{ PreferredMaintenanceWindowDay }}"
     PreferredMaintenanceWindowStartTime: "{{ PreferredMaintenanceWindowStartTime }}"
     PreferredMaintenanceWindowEndTime: "{{ PreferredMaintenanceWindowEndTime }}"
     AvailabilityZones: "{{ AvailabilityZones }}"
     CidrBlocks: "{{ CidrBlocks }}"
     AccessCidr: "{{ AccessCidr }}"
     AllowVersionUpgrade: "{{ AllowVersionUpgrade | string }}"
     AZMode: "{{ AZMode }}"
     PortNumber: "{{ PortNumber | string }}"
     EngineVersion: "{{ EngineVersion }}"
     CacheNodeType: "{{ CacheNodeType }}"
     NumCacheNodes: "{{ NumCacheNodes | string }}"
     ClusterType: "{{ ClusterType }}"
   tags:
     ServiceBrokerId: "{{ application_name }}"
  register: elasticache

- name: Check for ElastiCache CloudFormation error logs
  debug:
    var: elasticache.log

- name: Encode bind credentials
  asb_encode_binding:
    fields:
      MEMCACHE_ENDPOINT: "{{ elasticache.stack_outputs.EndpointAddress }}"
      MEMCACHE_PORT: "{{ PortNumber }}"
  when: elasticache.log | length < 1
